---
layout: post
title:  "CMU 15-441 Lab 3"
date:   2022-03-28 20:35:49 +0800
categories: database
tags: ["database"]
---

# About

CMU15-445想必不必介绍。由于教师Andy Pavlo要求不能将实现开源，因此本Repo只包含写的笔记。在正式开始写这个Lab之前，你需要：

- 注册Grade scope账号，因为本身的测试用例之弱小会让这个Lab的意义大打折扣
- 去听15-445第一节课，里面有课堂DJ的开场曲（
- 对于CMU的学生来说，每个Lab都有一个月的时间。但我希望尽快搞定，所以从3开始参考了一个仅有几行到几十行关键代码示例的通关博客。仅供参考。[CMU15-445 数据库实验全满分通过笔记](https://blog.csdn.net/twentyonepilots/article/details/120868216). 选中的原因是因为他前面两个lab提到的一些关键点和我的体会很相似。所以后面这篇博客提到的我应该不会再提及。

# Lab 3

在这个Lab中，需要实现火山模型。主要工作量在于读懂数量庞大的工具类。分散在`storage`(Value, tuple, page), `executors`(plan, exec),  `catalog`(meta) 内。包括类型，值，Tuple, TablePage, 迭代器等。本身Lab难度略难于Lab 1, 主要是体会帮你设计的工具类，并且学会使用它。

- 本次可能会用到UNREACHABLE 宏，学会去使用它们。
- Table & Table heap, Table继承自Page, Table heap是Table的容器，有迭代器
- Update 的时候**不可以产生元组结果**，否则不符合语义。只需要While直到子节点不返回，然后返回False即可
- 如果你数据库本身应用也不牢固（比如我），那你在这个Lab可能遇到困难。学习一些主要的概念：
  - Group By, Aggreagate, Join, Distinct

- Lab 3的测试用例多得令人感动… 这降低了他的难度

## 使用Mutable 关键字

Mutable允许在Const函数中修改变量。以哈希表类举例，比如Lookup函数，从外部来看不可以修改哈希表的结构和数据，也就是【逻辑】Const，但是我们在哈希表内部可能会维护一些类成员，比如Round Robin Index来做负载均衡，必须修改。所以，使用Mutable修饰能对外维持Const的同时保证某些类成员的可修改性。



